#!/usr/bin/env bash

# Halt on error and support tracing.
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

# Load dokku/common API.
# shellcheck source=/dev/null
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

# Load dokku/nginx-vhosts API.
# shellcheck source=/dev/null
source "$PLUGIN_CORE_AVAILABLE_PATH/nginx-vhosts/functions"

# Validate arguments.
if [ -z "$1" ]; then
    dokku_log_warn "Missing argument."
    exit 1
fi

# Check if nginx config is already controlled by Git.
if [ -d "$NGINX_CONFIG_ROOT/.git" ]; then
    dokku_log_info2 "'$NGINX_CONFIG_ROOT' is already a git repository."
    exit 1
fi

# Make sure the data directory exists.
mkdir -p "$PLUGIN_DATA_ROOT/"

# Build archive path and file name.
ARCHIVE="$PLUGIN_DATA_ROOT/nginx-$(date +"%Y%m%d%H%M%S").tar.gz"

# Save current config files.
dokku_log_info2 "Archiving current nginx configuration files:"
dokku_log_info1 "$ARCHIVE..."
if tar -czf "$ARCHIVE" -C "$NGINX_CONFIG_ROOT" .; then
    dokku_log_info1 "Done."
else
    dokku_log_warn "Could not create archive."
    exit 1
fi

# (Re)set temporary directory.
NGINX_TEMP_CONFIG_ROOT="/tmp/nginx"
rm -rf "$NGINX_TEMP_CONFIG_ROOT"

# Put new config into place.
dokku_log_info2 "Cloning '$1'..."
if git clone "$1" "$NGINX_TEMP_CONFIG_ROOT" >/dev/null 2>&1; then
    dokku_log_info1 "Done."
else
    dokku_log_warn "Could not clone repository."
    exit 1
fi

dokku_log_info2 "Moving config into place..."
# Once it was cloned successfully, move it to the right place.
sudo rm -rf "$NGINX_CONFIG_ROOT"
sudo mv "$NGINX_TEMP_CONFIG_ROOT" "$NGINX_CONFIG_ROOT"

dokku_log_info2 "Configuration files installed successfully."

# Validate current config.
dokku_log_info2 "Validating configuration..."
if validate_nginx; then
    dokku_log_info1 "Done."
else
    dokku_log_warn "Validation failed."
fi
