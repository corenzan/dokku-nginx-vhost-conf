#!/usr/bin/env bash

# Halt on error and support tracing.
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

# Figure out plugin name, because apparently that's an odd information for dokku to provide.
PLUGIN_NAME="$(basename "$(dirname "$(realpath "${BASH_SOURCE[0]}")")")"
export PLUGIN_NAME

# Read configuration file.
# shellcheck source=commands
source "$PLUGIN_ENABLED_PATH/$PLUGIN_NAME/config"

# Extract the subcommand that was issued.
case "$1" in
    $PLUGIN_COMMAND_PREFIX)
        SUBCOMMAND="default"
        ;;
    help)
        # Dokku has an alternate format for listing all commands and subcommands in one go.
        # But since the API doesn't tell us which format was requested we have to figure
        # it out from the command used to invoke dokku. i.e. Test if it had --all in it.
        if ps -o command= $PPID | grep '\--all' >/dev/null 2>&1; then
            SUBCOMMAND="help"
            set -- "$1" "--no-usage"
        else
            SUBCOMMAND="about"
        fi
        ;;
    *)
        SUBCOMMAND="${1#$PLUGIN_COMMAND_PREFIX:}"
        ;;
esac

# Remove subcommand from parameters.
shift 1

# Find subcommand script and execute it.
SUBCOMMAND_FILE="$PLUGIN_ENABLED_PATH/$PLUGIN_NAME/subcommands/$SUBCOMMAND"
if [ -x "$SUBCOMMAND_FILE" ]; then
    "$SUBCOMMAND_FILE" "$@"
else
    exit "$DOKKU_NOT_IMPLEMENTED_EXIT"
fi
